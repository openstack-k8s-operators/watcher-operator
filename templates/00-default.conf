[DEFAULT]
state_path = /var/lib/watcher
{{ if (index . "TransportURL") }}
transport_url = {{ .TransportURL }}
{{ end }}
control_exchange = watcher
debug = True
{{ if (index . "LogFile") }}
log_file = {{ .LogFile }}
{{ end }}

[database]
connection = {{ .DatabaseConnection }}

[oslo_policy]
policy_file = /etc/watcher/policy.yaml.sample

[oslo_messaging_notifications]
driver = messagingv2

{{ if (index . "KeystoneAuthURL") }}
[keystone_authtoken]
{{ if (index . "MemcachedServersWithInet") }}
memcached_servers={{ .MemcachedServersWithInet }}
{{ end }}
project_domain_name = Default
project_name = service
user_domain_name = Default
password = {{ .ServicePassword }}
username = {{ .ServiceUser }}
auth_url = {{ .KeystoneAuthURL }}
interface = internal
auth_type = password
{{ if .CaFilePath }}
cafile = {{ .CaFilePath }}
{{ end }}
{{ end }}

{{ if (index . "KeystoneAuthURL") }}
[watcher_clients_auth]
project_domain_name = Default
project_name = service
user_domain_name = Default
password = {{ .ServicePassword }}
username = {{ .ServiceUser }}
auth_url = {{ .KeystoneAuthURL }}
interface = internal
auth_type = password
{{ if .CaFilePath }}
cafile = {{ .CaFilePath }}
{{ end }}
{{ end }}


[oslo_concurrency]
lock_path = /var/lib/watcher/tmp

[watcher_datasources]
datasources = prometheus

{{ if (index . "MemcachedServers") }}
[cache]
{{ if .MemcachedTLS }}
backend = dogpile.cache.pymemcache
memcache_servers={{ .MemcachedServers }}
{{ else }}
backend = dogpile.cache.memcached
memcache_servers={{ .MemcachedServersWithInet }}
{{ end }}
enabled=true
tls_enabled={{ .MemcachedTLS }}
{{ end }}

{{ if (index . "PrometheusHost") }}
[prometheus_client]
host = {{ .PrometheusHost }}
port = {{ .PrometheusPort }}
{{ if (index . "PrometheusCaCertPath") }}
cafile = {{ .PrometheusCaCertPath }}
{{ end }}
{{ end }}

[cinder_client]
endpoint_type = internal

[glance_client]
endpoint_type = internal

[ironic_client]
endpoint_type = internal

[keystone_client]
interface = internal

[neutron_client]
endpoint_type = internal

[nova_client]
endpoint_type = internal

[placement_client]
interface = internal
