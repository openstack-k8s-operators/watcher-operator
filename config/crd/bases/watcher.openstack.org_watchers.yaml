---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: watchers.watcher.openstack.org
spec:
  group: watcher.openstack.org
  names:
    kind: Watcher
    listKind: WatcherList
    plural: watchers
    singular: watcher
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: Watcher is the Schema for the watchers API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: WatcherSpec defines the desired state of Watcher
            properties:
              apiContainerImageURL:
                description: APIContainerImageURL
                type: string
              apiServiceTemplate:
                default:
                  replicas: 1
                description: APIServiceTemplate - define the watcher-api service
                properties:
                  customServiceConfig:
                    description: |-
                      CustomServiceConfig - customize the service config using this parameter to change service defaults,
                      or overwrite rendered information using raw OpenStack config format. The content gets added to
                      to /etc/<service>/<service>.conf.d directory as a custom config file.
                    type: string
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: |-
                      NodeSelector to target subset of worker nodes running this component. Setting here overrides
                      any global NodeSelector settings within the Watcher CR.
                    type: object
                  override:
                    description: |-
                      Override, provides the ability to override the generated manifest of
                      several child resources.
                    properties:
                      service:
                        additionalProperties:
                          description: MetalLBConfig to configure the MetalLB loadbalancer
                            service
                          properties:
                            ipAddressPool:
                              description: IPAddressPool expose VIP via MetalLB on
                                the IPAddressPool
                              minLength: 1
                              type: string
                            loadBalancerIPs:
                              description: LoadBalancerIPs, request given IPs from
                                the pool if available. Using a list to allow dual
                                stack (IPv4/IPv6) support
                              items:
                                type: string
                              type: array
                            sharedIP:
                              default: true
                              description: SharedIP if true, VIP/VIPs get shared with
                                multiple services
                              type: boolean
                            sharedIPKey:
                              default: ""
                              description: |-
                                SharedIPKey specifies the sharing key which gets set as the annotation on the LoadBalancer service.
                                Services which share the same VIP must have the same SharedIPKey. Defaults to the IPAddressPool if
                                SharedIP is true, but no SharedIPKey specified.
                              type: string
                          required:
                          - ipAddressPool
                          type: object
                        description: |-
                          Override configuration for the Service created to serve traffic to
                          the cluster.
                          The key must be the endpoint type (public, internal)
                          temporarily use MetalLBConfig struct, later we'll switch to
                          service.RoutedOverrideSpec
                        type: object
                    type: object
                  replicas:
                    default: 1
                    description: Replicas of WatcherAPI service to run
                    format: int32
                    maximum: 32
                    minimum: 0
                    type: integer
                  resources:
                    description: |-
                      Resources - Compute Resources required by this service (Limits/Requests).
                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.


                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.


                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                type: object
              applierContainerImageURL:
                description: ApplierContainerImageURL
                type: string
              applierServiceTemplate:
                default:
                  replicas: 1
                description: WatcherApplierTemplate - define the watcher-applier service
                properties:
                  customServiceConfig:
                    description: |-
                      CustomServiceConfig - customize the service config using this parameter to change service defaults,
                      or overwrite rendered information using raw OpenStack config format. The content gets added to
                      to /etc/<service>/<service>.conf.d directory as a custom config file.
                    type: string
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: |-
                      NodeSelector to target subset of worker nodes running this component. Setting here overrides
                      any global NodeSelector settings within the Watcher CR.
                    type: object
                  replicas:
                    default: 1
                    description: Replicas of WatcherApplier service to run
                    format: int32
                    maximum: 1
                    minimum: 0
                    type: integer
                  resources:
                    description: |-
                      Resources - Compute Resources required by this service (Limits/Requests).
                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.


                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.


                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                type: object
              customServiceConfig:
                description: |-
                  CustomServiceConfig - customize the service config using this parameter to change service defaults,
                  or overwrite rendered information using raw OpenStack config format. The content gets added to
                  to /etc/<service>/<service>.conf.d directory as a custom config file.
                type: string
              databaseAccount:
                default: watcher
                description: DatabaseAccount - MariaDBAccount CR name used for watcher
                  DB, defaults to watcher
                type: string
              databaseInstance:
                description: |-
                  MariaDB instance name
                  Required to use the mariadb-operator instance to create the DB and user
                type: string
              decisionengineContainerImageURL:
                description: DecisionEngineContainerImageURL
                type: string
              memcachedInstance:
                default: memcached
                description: MemcachedInstance is the name of the Memcached CR that
                  all watcher service will use.
                type: string
              nodeSelector:
                additionalProperties:
                  type: string
                description: |-
                  NodeSelector to target subset of worker nodes running this component. Setting here overrides
                  any global NodeSelector settings within the Watcher CR.
                type: object
              passwordSelectors:
                default:
                  service: WatcherPassword
                description: PasswordSelectors - Selectors to identify the ServiceUser
                  password from the Secret
                properties:
                  service:
                    default: WatcherPassword
                    description: Service - Selector to get the watcher service user
                      password from the Secret
                    type: string
                type: object
              preserveJobs:
                default: false
                description: PreserveJobs - do not delete jobs after they finished
                  e.g. to check logs
                type: boolean
              prometheusSecret:
                default: metric-storage-prometheus-config
                description: Secret containing prometheus connection parameters
                type: string
              rabbitMqClusterName:
                default: rabbitmq
                description: |-
                  RabbitMQ instance name
                  Needed to request a transportURL that is created and used in Watcher
                type: string
              secret:
                default: osp-secret
                description: Secret containing all passwords / keys needed
                type: string
              serviceUser:
                default: watcher
                description: ServiceUser - optional username used for this service
                  to register in keystone
                type: string
              tls:
                description: TLS - Parameters related to the TLS
                properties:
                  api:
                    description: API tls type which encapsulates for API services
                    properties:
                      internal:
                        description: Internal GenericService - holds the secret for
                          the internal endpoint
                        properties:
                          secretName:
                            description: SecretName - holding the cert, key for the
                              service
                            type: string
                        type: object
                      public:
                        description: Public GenericService - holds the secret for
                          the public endpoint
                        properties:
                          secretName:
                            description: SecretName - holding the cert, key for the
                              service
                            type: string
                        type: object
                    type: object
                  caBundleSecretName:
                    description: CaBundleSecretName - holding the CA certs in a pre-created
                      bundle file
                    type: string
                type: object
            required:
            - apiContainerImageURL
            - apiServiceTemplate
            - applierContainerImageURL
            - applierServiceTemplate
            - databaseInstance
            - decisionengineContainerImageURL
            - rabbitMqClusterName
            type: object
          status:
            description: WatcherStatus defines the observed state of Watcher
            properties:
              apiServiceReadyCount:
                description: APIServiceReadyCount defines the number or replicas ready
                  from watcher-api
                format: int32
                type: integer
              applierServiceReadyCount:
                description: ApplierServiceReadyCount defines the number or replicas
                  ready from watcher-applier
                format: int32
                type: integer
              conditions:
                description: Conditions
                items:
                  description: Condition defines an observation of a API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase.
                      type: string
                    severity:
                      description: |-
                        Severity provides a classification of Reason code, so the current situation is immediately
                        understandable and could act accordingly.
                        It is meant for situations where Status=False and it should be indicated if it is just
                        informational, warning (next reconciliation might fix it) or an error (e.g. DB create issue
                        and no actions to automatically resolve the issue can/should be done).
                        For conditions where Status=Unknown or Status=True the Severity should be SeverityNone.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              hash:
                additionalProperties:
                  type: string
                description: Map of hashes to track e.g. job status
                type: object
              observedGeneration:
                description: |-
                  ObservedGeneration - the most recent generation observed for this
                  service. If the observed generation is less than the spec generation,
                  then the controller has not processed the latest changes injected by
                  the opentack-operator in the top-level CR (e.g. the ContainerImage)
                format: int64
                type: integer
              serviceID:
                description: ServiceID - The ID of the watcher service registered
                  in keystone
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
